@page "/Account/Login"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using IdentityTest.Data
@using IdentityTest.Model
@using Microsoft.AspNetCore.Authorization

@inject SignInManager<User> SignInManager
@inject ILogger<Login> Logger
@inject NavigationManager navigationManager
@inject IdentityRedirectManager RedirectManager
@attribute [AllowAnonymous]

<h3>Login</h3>
<EditForm Model="Input" OnValidSubmit="LoginUser" FormName="Login">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="username">Username:</label>
        <InputText id="username" @bind-Value="Input.Username" />
    </div>
    <div>
        <label for="password">Password:</label>
        <InputText id="password" type="password" @bind-Value="Input.Password" />
    </div>

    <button type="submit">Log In</button>
</EditForm>
@code {
    private string? errorMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            // Clear the existing external cookie to ensure a clean login process
            await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);
        }
    }

    public async Task LoginUser()
    {
        var result = await SignInManager.PasswordSignInAsync(Input.Username, Input.Password, Input.RememberMe, lockoutOnFailure: false);

        if (result.Succeeded)
        {
            Logger.LogInformation("User logged in.");
            RedirectManager.RedirectTo(ReturnUrl);
        }
        else
        {
            errorMessage = "Invalid login attempt.";
            Logger.LogWarning("Invalid login attempt.");
        }
    }

    private sealed class InputModel
    {
        [Required]
        [DataType(DataType.Text)]
        public string Username { get; set; } = "";

        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        [Display(Name = "Remember me?")]
        public bool RememberMe { get; set; }
    }


}